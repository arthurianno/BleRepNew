// Generated by view binder compiler. Do not edit!
package com.example.bluetoothcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bluetoothcontrol.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReadingDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout DataFrag;

  @NonNull
  public final Button buttonRDData;

  @NonNull
  public final Button buttonWRData;

  @NonNull
  public final RecyclerView dataRecView;

  @NonNull
  public final NestedScrollView nestedScrollView;

  private FragmentReadingDataBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout DataFrag, @NonNull Button buttonRDData, @NonNull Button buttonWRData,
      @NonNull RecyclerView dataRecView, @NonNull NestedScrollView nestedScrollView) {
    this.rootView = rootView;
    this.DataFrag = DataFrag;
    this.buttonRDData = buttonRDData;
    this.buttonWRData = buttonWRData;
    this.dataRecView = dataRecView;
    this.nestedScrollView = nestedScrollView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReadingDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReadingDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reading_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReadingDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout DataFrag = (RelativeLayout) rootView;

      id = R.id.buttonRDData;
      Button buttonRDData = ViewBindings.findChildViewById(rootView, id);
      if (buttonRDData == null) {
        break missingId;
      }

      id = R.id.buttonWRData;
      Button buttonWRData = ViewBindings.findChildViewById(rootView, id);
      if (buttonWRData == null) {
        break missingId;
      }

      id = R.id.dataRecView;
      RecyclerView dataRecView = ViewBindings.findChildViewById(rootView, id);
      if (dataRecView == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      return new FragmentReadingDataBinding((RelativeLayout) rootView, DataFrag, buttonRDData,
          buttonWRData, dataRecView, nestedScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
