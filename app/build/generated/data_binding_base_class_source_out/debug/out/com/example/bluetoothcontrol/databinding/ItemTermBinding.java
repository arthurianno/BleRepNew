// Generated by view binder compiler. Do not edit!
package com.example.bluetoothcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bluetoothcontrol.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTermBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView nameOfAtributeData;

  @NonNull
  public final TextView nameOfData;

  @NonNull
  public final TextView textViewAttribute;

  private ItemTermBinding(@NonNull RelativeLayout rootView, @NonNull TextView nameOfAtributeData,
      @NonNull TextView nameOfData, @NonNull TextView textViewAttribute) {
    this.rootView = rootView;
    this.nameOfAtributeData = nameOfAtributeData;
    this.nameOfData = nameOfData;
    this.textViewAttribute = textViewAttribute;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTermBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTermBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_term, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTermBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nameOfAtributeData;
      TextView nameOfAtributeData = ViewBindings.findChildViewById(rootView, id);
      if (nameOfAtributeData == null) {
        break missingId;
      }

      id = R.id.nameOfData;
      TextView nameOfData = ViewBindings.findChildViewById(rootView, id);
      if (nameOfData == null) {
        break missingId;
      }

      id = R.id.textViewAttribute;
      TextView textViewAttribute = ViewBindings.findChildViewById(rootView, id);
      if (textViewAttribute == null) {
        break missingId;
      }

      return new ItemTermBinding((RelativeLayout) rootView, nameOfAtributeData, nameOfData,
          textViewAttribute);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
